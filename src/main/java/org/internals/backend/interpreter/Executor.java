package org.internals.backend.interpreter;

import org.internals.backend.Backend;
import org.internals.intermediate.ICode;
import org.internals.intermediate.SymbolTable;
import org.internals.message.Message;
import org.internals.message.MessageType;

public class Executor extends Backend {

    /**
     * Process the intermediate code and the symbol table generated by the
     * parser to generate machine-language instructions.
     * @param iCode the intermediate code.
     * @param symTab the symbol table.
     * @throws Exception if an error occurred.
     */
    @Override
    public void process(ICode iCode, SymbolTable symTab) throws Exception {
        long startTime = System.currentTimeMillis();
        float elapsedTime  =(System.currentTimeMillis() - startTime) / 1000f;
        int instructionCount = 0;

        // Send the compiler summary message.
        sendMessage(new Message(MessageType.COMPILER_SUMMARY,
                new Number[]{instructionCount, elapsedTime}));
    }
}
